# -*- coding: utf-8 -*-
"""Sentimental_API

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WoUnSB0_5ifg4r_Rd_2TayP_JfHu7fy3
"""

pip install tensorflow

pip install --upgrade gensim

from flask import Flask, request, jsonify
import numpy as np
import pandas as pd
import string
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.sequence import pad_sequences
from gensim.models import Word2Vec

# Load NLTK resources
nltk.download('punkt')
nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

# Load the saved Word2Vec model and word index
model_w2v = Word2Vec.load('word2vec_model.model')
#word_index = load_word_index()

# Load the saved LSTM model
model_lstm = load_model('sentiment_analysis_model.h5')  # Replace with your LSTM model path

app = Flask(__name__)

# Preprocessing function
def preprocess_text(text):
    text = text.lower()
    text = text.translate(str.maketrans('', '', string.punctuation))
    tokens = word_tokenize(text)
    filtered_tokens = [word for word in tokens if word not in stop_words]
    return filtered_tokens

@app.route('/predict_sentiment', methods=['POST'])
def predict_sentiment():
    data = request.get_json()
    text = data['text']

    # Preprocess the input text

    tokens = preprocess_text(text)
    indices = [word_index[word] for word in tokens if word in word_index]
    padded_sequence = pad_sequences([indices], maxlen=max_seq_length, padding='post')

    # Predict sentiment using the LSTM model
    prediction = model_lstm.predict(padded_sequence)[0]
    sentiment = 'positive' if prediction >= 0.5 else 'negative'

    return jsonify({'sentiment': sentiment, 'confidence': float(prediction)})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)  # Run the app on specified host and port

